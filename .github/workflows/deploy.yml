name: Deploy to Cloud Linux

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Backend Dependencies
        run: |
          cd be
          npm install

      - name: Install Frontend Dependencies
        run: |
          cd fe
          npm install

      - name: Build Frontend
        run: |
          cd fe
          npm run build

      - name: Build Backend
        run: |
          cd be
          npm run build

      - name: Deploy to Cloud Server (Dockerized)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 103.216.117.100
          username: root
          password: tMlB5PJbeO7%rJpJE#Wc
          port: 24700
          script: |
            # Create application directory
            sudo mkdir -p /var/www/engrisk-student-management
            cd /var/www/engrisk-student-management

            # Clone or pull latest code
            if [ -d ".git" ]; then
                echo "Repository exists, pulling latest code..."
                sudo git pull origin main
            else
                echo "Cloning repository..."
                sudo git clone https://github.com/haonnedu/engrisk-student-management.git .
            fi

            # Install Node.js and npm
            echo "Installing Node.js and npm..."
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs

            # Install dependencies
            cd be
            sudo npm install --production

            cd ../fe
            sudo npm install --production

            # Build applications
            sudo npm run build

            cd ../be
            sudo npm run build

            # Database already setup, just verify connection
            echo "Verifying database connection..."

            # Check if database container is running
            if sudo docker ps --format "table {{.Names}}" | grep -q "engrisk-postgres"; then
                echo "✅ Database container is running"
            else
                echo "Starting existing database container..."
                sudo docker start engrisk-postgres
                sleep 10
            fi

            # Quick database health check
            echo "Testing database connection..."
            if sudo docker exec engrisk-postgres pg_isready -U engrisk_user -d student_management >/dev/null 2>&1; then
                echo "✅ Database is ready!"
            else
                echo "❌ Database connection failed, but continuing with deployment..."
                echo "You may need to manually check the database container"
            fi

            # Setup environment variables
            cat << EOF | sudo tee /var/www/engrisk-student-management/be/.env
            DATABASE_URL="postgresql://engrisk_user:EngRisk2024!SecureDB#789@localhost:5432/student_management"
            JWT_SECRET="EngRisk2024!JWTSecretKey#456!Production"
            NODE_ENV="production"
            PORT=3001
            FRONTEND_URL="https://msjenny.io.vn"
            API_PREFIX="api/v1"
            EOF

            # Run database migrations and seeding
            cd be
            echo "Running database migrations and seeding..."

            # Run migration
            echo "🔄 Running database migrations..."
            sudo npm run prisma:deploy || echo "Migration failed, but continuing..."

            # Seed data
            echo "🌱 Seeding sample data..."
            sudo npm run seed || echo "Seed failed, but continuing..."

            # Setup frontend service
            sudo cp /var/www/engrisk-student-management/deploy/engrisk-frontend.service /etc/systemd/system/
            sudo systemctl daemon-reload
            sudo systemctl enable engrisk-frontend
            sudo systemctl start engrisk-frontend

            # Restart services
            sudo systemctl restart engrisk-backend
            sudo systemctl restart nginx

            # Install Docker Compose
            echo "Installing Docker Compose..."
            sudo apt install -y docker-compose

            # Build and run Dockerized app stack
            echo "Building Docker images..."
            sudo docker network create engrisk-student-management_default || true
            sudo docker-compose -f deploy/docker-compose.app.yml build
            echo "Restarting app stack..."
            sudo docker-compose -f deploy/docker-compose.app.yml up -d

            echo "Checking containers..."
            sudo docker ps -a | grep engrisk-

            # Setup SSL certificate if not exists
            echo "Setting up SSL certificate..."
            if [ ! -f "/etc/letsencrypt/live/msjenny.io.vn/fullchain.pem" ]; then
                echo "SSL certificate not found, setting up..."
                sudo certbot --nginx -d msjenny.io.vn -d www.msjenny.io.vn --non-interactive --agree-tos --email admin@msjenny.io.vn || echo "SSL setup failed, but continuing..."
            else
                echo "SSL certificate already exists"
            fi

            # Restart nginx after SSL setup
            sudo systemctl restart nginx

            echo "Deployment completed successfully!"

      - name: Health Check
        run: |
          sleep 30
          echo "Testing backend health..."
          curl -f https://msjenny.io.vn/api/v1/health || echo "Backend health check failed"
          echo "Testing frontend..."
          curl -f https://msjenny.io.vn/ || echo "Frontend health check failed"
