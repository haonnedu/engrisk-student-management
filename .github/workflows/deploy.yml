name: Docker Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: prod-deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - name: backend
            context: ./be
          - name: frontend
            context: ./fe
          - name: nginx
            context: ./deploy/nginx

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.name }}
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build & Push ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout (compose/nginx.conf)
        uses: actions/checkout@v4

      - name: Copy compose & nginx.conf to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT }}
          source: deploy/** 
          target: /var/www/engrisk-student-management

      - name: Deploy via SSH (compose pull/up)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT }}
          envs: DB_USER,DB_PASSWORD,JWT_SECRET,REGISTRY,IMAGE_NAME
          script_stop: true
          script: |
            set -Eeuo pipefail
            APP_DIR=/var/www/engrisk-student-management
            DOMAIN=msjenny.io.vn
            TAG=${GITHUB_SHA}

            mkdir -p "$APP_DIR" "$APP_DIR/nginx-config"
            cd "$APP_DIR"

            echo "${{ secrets.GITHUB_TOKEN }}" | docker login "$REGISTRY" -u "${{ github.actor }}" --password-stdin

            umask 177
            cat > .env <<'ENV'
            TAG=${TAG}
            DOMAIN=${DOMAIN}

            # DB
            POSTGRES_DB=student_management
            POSTGRES_USER=${DB_USER}
            POSTGRES_PASSWORD=${DB_PASSWORD}
            DB_HOST=esm_postgres
            DB_PORT=5432
            DB_USERNAME=${DB_USER}
            DB_PASSWORD=${DB_PASSWORD}
            DB_NAME=student_management
            DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@esm_postgres:5432/student_management

            # JWT
            JWT_SECRET=${JWT_SECRET}
            JWT_EXPIRES_IN=24h

            # Backend
            NODE_ENV=production
            PORT_BE=3001
            FRONTEND_URL=https://${DOMAIN}
            API_PREFIX=api/v1

            # Frontend
            PORT_FE=3000
            NEXT_PUBLIC_API_URL=https://${DOMAIN}/api/v1
            ENV

            chmod 600 .env

            docker compose -f docker-compose.prod.yml --env-file .env pull
            docker compose -f docker-compose.prod.yml --env-file .env up -d

            sleep 12
            curl -fsS -k "https://${DOMAIN}/api/v1/health" >/dev/null
            curl -fsS -k "https://${DOMAIN}/" >/dev/null

      - name: Production Health Check (external)
        run: |
          sleep 20
          curl -f -k https://msjenny.io.vn/api/v1/health
          curl -f -k https://msjenny.io.vn/
