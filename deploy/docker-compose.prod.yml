version: "3.9"

name: engrisk-student-management
services:
  db:
    image: postgres:15-alpine
    container_name: esm_postgres
    restart: unless-stopped
    networks: [engrisk]
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  backend:
    image: ghcr.io/${IMAGE_NAME}-backend:${TAG}
    container_name: engrisk-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks: [engrisk]
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT_BE}
      FRONTEND_URL: ${FRONTEND_URL}
      API_PREFIX: api/v1
    ports:
      - "${PORT_BE}:${PORT_BE}"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:${PORT_BE}/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s
    command: >
      sh -c "
        npx prisma migrate deploy &&
        node dist/main.js
      "

  frontend:
    image: ghcr.io/${IMAGE_NAME}-frontend:${TAG}
    container_name: engrisk-frontend
    restart: unless-stopped
    networks: [engrisk]
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT_FE}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    ports:
      - "${PORT_FE}:${PORT_FE}"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:${PORT_FE}"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  nginx:
    image: ghcr.io/${IMAGE_NAME}-nginx:${TAG}
    container_name: engrisk-nginx
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    networks: [engrisk]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro

networks:
  engrisk:
    name: engrisk-network

volumes:
  postgres_data:
    name: postgres_data
